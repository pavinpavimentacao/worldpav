// Script para encontrar onde o Supabase est√° dispon√≠vel
// Execute este script no console

(function() {
  console.log('üîç Procurando Supabase em diferentes locais...');
  
  // Verificar diferentes vari√°veis globais onde o Supabase pode estar
  const possibleLocations = [
    'window.supabase',
    'window.supabaseClient', 
    'window.supa',
    'window.sb',
    'window.db',
    'window.$supabase'
  ];
  
  let foundSupabase = null;
  let foundLocation = null;
  
  for (const location of possibleLocations) {
    try {
      const value = eval(location);
      if (value && typeof value === 'object' && value.auth) {
        foundSupabase = value;
        foundLocation = location;
        console.log(`‚úÖ Supabase encontrado em: ${location}`);
        console.log('üì± Objeto:', value);
        break;
      }
    } catch (e) {
      // Ignorar erros de eval
    }
  }
  
  if (!foundSupabase) {
    console.log('‚ùå Supabase n√£o encontrado em nenhuma vari√°vel global');
    console.log('üîç Verificando window object...');
    
    // Listar todas as propriedades do window que podem ser o Supabase
    const windowProps = Object.keys(window).filter(key => 
      key.toLowerCase().includes('supabase') || 
      key.toLowerCase().includes('supa') ||
      key.toLowerCase().includes('client')
    );
    
    console.log('üìã Propriedades do window que podem ser Supabase:', windowProps);
    
    for (const prop of windowProps) {
      try {
        const value = window[prop];
        if (value && typeof value === 'object' && value.auth) {
          foundSupabase = value;
          foundLocation = `window.${prop}`;
          console.log(`‚úÖ Supabase encontrado em: window.${prop}`);
          break;
        }
      } catch (e) {
        // Ignorar erros
      }
    }
  }
  
  if (foundSupabase) {
    console.log(`üéâ SUPABASE ENCONTRADO EM: ${foundLocation}`);
    
    // Testar se o usu√°rio est√° logado
    foundSupabase.auth.getUser().then(({ data: { user }, error }) => {
      if (error) {
        console.error('‚ùå Erro ao verificar usu√°rio:', error);
      } else if (user) {
        console.log('‚úÖ Usu√°rio logado:', user.id);
      } else {
        console.log('‚ö†Ô∏è Nenhum usu√°rio logado');
      }
    });
    
    // Criar uma vari√°vel global tempor√°ria
    window.tempSupabase = foundSupabase;
    console.log('üîß Supabase dispon√≠vel como: window.tempSupabase');
    
    alert(`‚úÖ SUPABASE ENCONTRADO!\n\nLocaliza√ß√£o: ${foundLocation}\n\nDispon√≠vel como: window.tempSupabase\n\nAgora voc√™ pode usar window.tempSupabase para testar a Edge Function.`);
    
  } else {
    console.log('‚ùå Supabase n√£o encontrado em lugar nenhum');
    alert('‚ùå SUPABASE N√ÉO ENCONTRADO\n\nO Supabase n√£o est√° dispon√≠vel nesta p√°gina.\n\nTente:\n1. Executar na p√°gina principal do app\n2. Aguardar o carregamento completo\n3. Verificar se o app est√° funcionando corretamente');
  }
})();
