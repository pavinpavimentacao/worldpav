// Script simplificado para testar notifica√ß√µes
// Execute no console do navegador

async function testSimpleNotification() {
  try {
    console.log('üß™ Testando notifica√ß√£o simples...');
    
    // Verificar se h√° subscription ativa
    const registration = await navigator.serviceWorker.getRegistration();
    if (!registration) {
      console.error('‚ùå Service Worker n√£o registrado');
      return;
    }
    
    const subscription = await registration.pushManager.getSubscription();
    if (!subscription) {
      console.error('‚ùå Push subscription n√£o encontrada');
      return;
    }
    
    console.log('‚úÖ Subscription encontrada:', subscription.endpoint);
    
    // Enviar notifica√ß√£o de teste
    const response = await fetch('https://rgsovlqsezjeqohlbyod.supabase.co/functions/v1/send-notification', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJnc292bHFzZXpqZXFvaGxieW9kIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg2Mzk1ODksImV4cCI6MjA3NDIxNTU4OX0.2mX7bKdKjKjKjKjKjKjKjKjKjKjKjKjKjKjKjKjKjKjK'
      },
      body: JSON.stringify({
        userIds: ['7f8e5032-a10a-4905-85fe-78cca2b29e05'],
        title: 'üß™ Teste de Notifica√ß√£o',
        body: 'Esta √© uma notifica√ß√£o de teste!',
        data: {
          type: 'test',
          timestamp: new Date().toISOString()
        },
        url: '/'
      })
    });
    
    const result = await response.json();
    console.log('üì± Resultado da notifica√ß√£o:', result);
    
    if (result.success > 0) {
      alert('‚úÖ Notifica√ß√£o enviada com sucesso!');
    } else {
      alert('‚ùå Falha ao enviar notifica√ß√£o: ' + JSON.stringify(result));
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
    alert('‚ùå Erro: ' + error.message);
  }
}

// Executar teste
testSimpleNotification();
